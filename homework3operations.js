Створіть свій власний репозиторій.
В ньому створіть гілку js_homework1. Кожна наступна домашня робота буде здійснюватись в окремій гілці.
Вам необхідно вказати, яким буде результат операції та описати крок за кроком у вигляді коментарів, як відбувається перетворення в кожному прикладі:

//Number 1
console.log ('number' + 3 + 3);
//Відповідь: number33 - тут простe склеювання, так як у нас стрінга + числа

//Number 2
console.log (null + 3) 
//Відповідь: 3, null буде числом 0, 0+3=3

//Number 3
console.log (5 && "qwerty")
//Відповідь: "qwerty, опертор AND поветає останнє обчислювальне значення true

//Number 4
console.log (+'40' + +'2' + "hillel");
/* //Відповідь: 42hillel
+ переведе 40 в число, такод + переведе 2 в число - 40 + 2= 42
потім буде звичайне склеювання 42 + hillel = 42hillel */

//Number 5
console.log ('10' - 5 === 6);
/* Відповідь: false
при відніманні 10 автомвтично переводиться в число 
10 -5 = 5
5 не дорівнює 6 */

//Number 6
console.log (true + false)  
//Відповідь: 1, true = 1, false = 0

//Number 7
console.log ('4px' - 3 )
/* //Відповідь: NaN
JS '4px' спробує перевести в число під час віднімання.
// '4px' не може бути конвертовано в число, тому буде повернуто результат NaN (Not a Number). */

//Number 8
console.log ('4' - 3) 
//Відповідь: 1, JS '4'переведе в число під час віднімання. 4 - 3 = 1

//Number 9
console.log ('6' + 3 ** 0 );
//Відповідь: 61, спочатку призводимо 3 в нулеву ступінь буде 1 (будь яке значення в нулевій ступені = 1), потім при додаванні стрінги і число відбуважться просто склеювання тобто 61

//Number 10
console.log (12 / '6' )
//Відповідь: 2, JS '6'переведе в число під час ділення. 

//Number 11
console.log ('10' + (5 === 6) );
/* //Відповідь: 10false
спочатку виконуємо дію в дужках (5 не дорінює 6 - отримуємо false)
при додванні стрінги та булевого значення буде просто склеювання, тобто 10false
 */

//Number 12
console.log ( null == '') 
//Відповідь: false, порівнюємо 0 і взагалі пусте значення

//Number 13
console.log (3 ** (9 / 3) );
//Відповідь: 27, спочатку виконуємо дію в дужках (9 ділимо на 3), отримуємо 3 яке зводимо в 3 ступінь

//Number 14
console.log ( !!'false' == !!'true') 
/* //Відповідь: true, тут ми порівнюємо просто значення
!!'false' - не порожнє значення - true
!!'true' - не порожнє значення - true
true ==  true */


//Number 15
console.log (0 ||'0' && 1 ) 
//Відповідь: 1
/* 0 - false
'0' true 
при порівнянні 0 ||'0' - отримаємо true
далі true && 1 (теж true)
Так як у нас оператор  `&&` має вищий пріоритет за оператор `||, тому виводимо останнє обчислюване значення true і це 1*/

//Number 16
console.log ((+null == false) < 1);
/* //Відповідь: false; 
унарний + переводить null - учисло 0
false також переводиться в число 0
потім порівнюємо значення (0 = 0) - так, тобто true
true перводимо в 1
1 не більше 1
тому отримуємо false
*/

//Number 17
console.log (false && true || true) 
/* //Відповідь: true 
спочатку виконуємо дію  false && true (для && треба щоб скрізь було тру, тому ту резільтат  - false)
далі виконуємо дію false || true ( для || небхідно щоб хоч 1 було true, тому тут буде true)
 */

//Number 18
console.log ( false && (false || true)) 
/* //Відповідь:false
спочатку виконуємо дію в дужках || ( для || небхідно щоб хоч 1 було true, тому тут буде true)
потім виконуємо дію false && true  (для && треба щоб скрізь було тру, тому тут резільтат  - false)
 */ 

//Number 19
console.log ((+null == false) < 1 ** 5); 
/* //Відповідь: false
унарний + переводить null - у число 0
false також переводиться в число 0
потім порівнюємо значення (0 = 0) - так, тобто true
true перводимо в 1
1 приносимо в 5 ступінь то буде 1
1 не більше 1
тому отримуємо false */